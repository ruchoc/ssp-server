<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.scau.pyx.ssp.mapper.ReplyMapper">
    <insert id="insertReply">
        INSERT INTO T_REPLY( CONTENT,SEND_USER_ID,ACCEPT_USER_ID,COMMENT_ID )
        VALUES ( #{content},#{sendUserId},#{acceptUserId},#{commentId} );
    </insert>
    <insert id="insertReplyWithoutAcceptUserId">
        INSERT INTO T_REPLY( CONTENT,SEND_USER_ID,COMMENT_ID )
        VALUES ( #{content},#{sendUserId},#{commentId} );
    </insert>
    <!-->
    <select id="getReply" resultType="edu.scau.pyx.ssp.entity.ReplyListInfo">
        SELECT R.ID AS id,
               U1.ID AS sendUserId,
               U1.`NAME` AS sendUserName,
               I1.AVATAR_URL AS sendUserAvatarUrl,
               U2.ID AS acceptUserId,
               U2.`NAME` AS acceptUserName,
               I2.AVATAR_URL AS acceptUserAvatarUrl,
               R.CONTENT AS content,
               R.TIME AS time
        FROM T_USER AS U1,T_REPLY AS R,T_USER AS U2,T_USER_INFO AS I1,T_USER_INFO AS I2
        WHERE U1.ID=R.SEND_USER_ID AND R.ACCEPT_USER_ID=U2.ID AND R.COMMENT_ID=#{commentId} AND U1.ID = I1.USER_ID AND U2.ID = I2.USER_ID
        ORDER BY R.TIME DESC
        LIMIT #{begin},#{length};
    </select>
    <-->
    <select id="getReply" resultType="edu.scau.pyx.ssp.entity.ReplyListInfo">
        SELECT
            T.id,
            U1.ID AS sendUserId,
            U1.`NAME` AS sendUserName,
            I1.AVATAR_URL AS sendUserAvatarUrl,
            T.acceptUserId,
            T.acceptUserName,
            T.acceptUserAvatarUrl,
            T.content,
            T.time
        FROM
            T_USER_INFO AS I1,
            T_USER AS U1,(SELECT
                              id,
                              sendUserId,
                              acceptUserId,
                              acceptUserName,
                              T_USER_INFO.AVATAR_URL AS acceptUserAvatarUrl,
                              content,
                              time,
                              commentId
                          FROM
                              (
                              SELECT
                              T_REPLY.ID AS id,
                              T_REPLY.SEND_USER_ID AS sendUserId,
                              T_USER.ID AS acceptUserId,
                              T_USER.`NAME` AS acceptUserName,
                              T_REPLY.CONTENT AS content,
                              T_REPLY.TIME AS time,
                              T_REPLY.COMMENT_ID as commentId
                              FROM
                              T_REPLY
                              LEFT JOIN T_USER ON T_REPLY.ACCEPT_USER_ID = T_USER.ID
                              ) AS T1
                              LEFT JOIN T_USER_INFO ON T1.acceptUserId = T_USER_INFO.USER_ID) AS T
        WHERE
            U1.ID = T.sendUserId
          AND T.commentId = #{commentId}
          AND U1.ID = I1.USER_ID
        ORDER BY
            T.time
            LIMIT #{begin},#{length};
    </select>
    <select id="getReplyNum" resultType="long">
        SELECT COUNT(*)
        FROM T_REPLY AS R
        WHERE R.COMMENT_ID=#{commentId};
    </select>
</mapper>